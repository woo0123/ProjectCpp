#include <iostream>

using namespace std;

void main()
{
	// 자료구조와 알고리즘
	// 
	// 자료구조란
	//  - 배열 같은것
	//  - 여러개의 데이터를 관리하는 방법
	//  - 몬스터여러마리, 캐릭터 여러마리, 등장하는 이펙트 등등
	//    수많은 데이터가 있는데 어떻게 관리해야 효율적일지
	//    
	//    그렇기 때문에 자료구조가 되게 여러가지 종류가 있고
	//    상황에 따라서 A자료구조가 더좋거나, B자료구조가 더좋을수도 있습니다.

	//    어떤 자료구조는 내가 원하는 데이터를 찾는데 느려요.
	//    그런데 이 자료구조는 데이터 추가와 삭제가 빨라요.

	//    어떤 자료구조는 내가 원하는 데이터를 찾는데 빨라요.
	//    그런데 이 자료구조는 데이터 추가와 삭제가 느려요.

	//    추가도빠르고 삭제도빠르고 찾는것도 빠른 자료구조가 있어요.
	//    대신에 이 자료구조는 메모리를 많이차지해요.

	//    자료구조에 대해서는 사용법과 장단점을 확실하게 외우면되는데,
	//    이게 면접과도 연관이 되거든요
	//    그래서 사용법과 장단점을 외우기전에 
	//    그냥 구현을 한번씩 해볼거에요. 주로 기초적인 자료구조랑 많이 사용하는 자료구조들을

	//    그리고 외울거에요

	// 알고리즘
	//   - 수도코드도 알고리즘 입니다.
	//   - 알고리즘이란 컴퓨터가 코드를 동작시키는 로직을 말해요
	//   - 대체로 사람들이 말하는 알고리즘은 좀 수학적인 내용이 들어가는 그런 로직을 말하긴합니다.
	//   - 알고리즘이라고하면, 
	//      따져야하는 내용이
	//        [그래서 이 문제를 해결하는데 얼마나 걸리냐?]
	//         - 시간복잡도
	// 
	//     주로 사용하는 알고리즘 게임에서는 길찾기 알고리즘
	
	//     자료구조에도 알고리즘이 들어가요.
	//     시간복잡도가 중요한 알고리즘이 들어갑니다.


	// 간단한 시간복잡도 체크해주는 코드
	int arr[10] = {};

	for (int i = 0; i < 10; i++)
	{
		arr[i] = i;
	}

	// 52 ~ 55 line의 시간복잡도
	// O(n)


	for (int i = 0; i < 10; i++)
	{
		for (int j = 0; j < 10; j++)
		{
			if (arr[i] == arr[j])
			{

			}
		}
	}

	// 61 ~ 70 line의 시간복잡도
	// O(n^2) 

	// O(logN)


	cout << arr[1] << endl;
	// O(1)


	// 저희가 오늘 배워볼 자료구조는
	// Linked List라고하는 자료구조

}